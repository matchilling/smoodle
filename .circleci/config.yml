version: 2
jobs:
  build_back_end:
    docker:
      - image: circleci/elixir:1.9.1
    environment:
      MIX_ENV: test
    steps:
      - checkout
      - restore_cache:
          key: elixir-deps-{{ .Branch }}-{{ checksum "mix.lock" }}
      - run:
          command: |
            mix local.hex --force
            mix local.rebar --force
            mix deps.get
            mix compile
      - save_cache:
          key: elixir-deps-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths:
            - deps
      - persist_to_workspace:
          root: ~/
          paths:
            - project
            - .mix

  build_front_end:
    docker:
      - image: circleci/node:12.11.0
    working_directory: ~/project/webapp
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          key: node-modules-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run:
          command: |
            yarn install
      - save_cache:
          key: node-modules-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

  backend_unit_tests:
    docker:
      - image: circleci/elixir:1.9.1
      - image: circleci/postgres
        environment:
          POSTGRES_PASSWORD: secret
          POSTGRES_USER: homestead
          POSTGRES_DB: smoodle_dev
    steps:
      - attach_workspace:
          at: ~/
      - run: mix test --trace
      - store_test_results:
          path: test-results

  frontend_unit_tests:
    docker:
      - image: circleci/node:12.11.0-browsers
    working_directory: ~/project/webapp
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          key: node-modules-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run:
          command: |
            yarn test-once
      - store_test_results:
          path: test-results

  deploy:
    docker:
      - image: circleci/elixir:1.9.1
    steps:
      - attach_workspace:
          at: ~/
      - run:
          command: git push https://${GIGALIXIR_USER}:${GIGALIXIR_PASSWORD}@git.gigalixir.com/smoodle.git

workflows:
  version: 2
  build_and_test:
    jobs:
      - build_back_end
      - backend_unit_tests:
          requires:
            - build_back_end
      - build_front_end:
          requires:
            - build_back_end
      - frontend_unit_tests:
          requires:
            - build_front_end
      - deploy:
          requires:
            - backend_unit_tests
            - frontend_unit_tests
          filters:
            branches:
              only:
                - master
            tags:
              only:
                - /$v\d\.\d\.\d/


